---
language: objective-c
env:
  global:
  - secure: DE9IUM+pIV757GU0ccfDJhA752442pKu3DyBthrzHW9+GbsqbfuJOx045CYNN5vOWutFPC0A51B9WxhLNpXXqD3mfU8MhP1gkF7SskrHvcAPrCyfdqZf1Q8XDP5phm2KbHhhwxQMYmmicd6yj8DPNy2wRoSgPSDp/ZUDk51XZDU=
  - secure: AfoHc5tpnYoI2TVGUeE9Xdru+15pd5N4YzO7EWvwmMnrHtNO3retrmKOGpnIyfbP2BeWRTW/z+BI4G0RrfvubjHu2us4wRh6Jq8+UZohBBkM+ldTnyqYHX97q+6ScWBWZGg7dpthd1x/7fmds8dSRzustHUhI7RzPbWEMQH1DGI=
  - NUMJOBS=3
  - OSX=1
  - USE_CCACHE=2
  - CCACHE_SLOPPINESS=pch_defines,time_macros
  - CCACHE_COMPRESS=1
  - CCACHE_MAXSIZE=300M
  matrix:
  - MAKEFILE=1    URHO3D_LIB_TYPE=STATIC
  - MAKEFILE=1    URHO3D_LIB_TYPE=SHARED
  - MAKEFILE=1    URHO3D_LIB_TYPE=STATIC URHO3D_64BIT=0
  - MAKEFILE=1    URHO3D_LIB_TYPE=SHARED URHO3D_64BIT=0
  - XCODE=1       URHO3D_LIB_TYPE=STATIC DEPLOYMENT_TARGET=10.8
  - XCODE=1       URHO3D_LIB_TYPE=SHARED DEPLOYMENT_TARGET=10.8
  - XCODE=1       URHO3D_LIB_TYPE=STATIC DEPLOYMENT_TARGET=10.8 URHO3D_64BIT=0
  - XCODE=1       URHO3D_LIB_TYPE=SHARED DEPLOYMENT_TARGET=10.8 URHO3D_64BIT=0
  - XCODE=1 IOS=1 URHO3D_LIB_TYPE=STATIC DEPLOYMENT_TARGET=7.0  URHO3D_64BIT=0
  - XCODE=1 IOS=1 URHO3D_LIB_TYPE=STATIC DEPLOYMENT_TARGET=7.0
matrix:
  fast_finish: true
before_script:
- if [ $IOS ]; then export CI_START_TIME=$(date +%s); fi
- export TRAVIS_COMMIT=$TRAVIS_COMMIT~
- export TAG=$(git describe --exact-match $TRAVIS_COMMIT 2>/dev/null); if [[ $TAG
  =~ [[:digit:]]+\.[[:digit:]]+ ]]; then export RELEASE_TAG=$TAG; fi
- export COMMIT_MESSAGE=$(git log --format=%B -n 1 $TRAVIS_COMMIT)
- if [ $XCODE ] && ([ $RELEASE_TAG ] || (! [[ $TRAVIS_BRANCH =~ [^-]+-[^-]+-CI ]]
  && echo $COMMIT_MESSAGE |grep -cq '\[ci package\]')); then export PACKAGE_UPLOAD=1;
  fi
- if [ $XCODE ]; then rvm gemset use global && travis_retry gem install xcpretty;
  fi
- travis_retry brew update >/dev/null && travis_retry brew install ccache
- if [ $PACKAGE_UPLOAD ]; then travis_retry brew install doxygen graphviz; fi
- export PATH=$(brew info ccache |grep -o '\S*lib\S*'):$PATH
- if [ $XCODE ]; then cp -p $(which ccache) $(dirname $(xcodebuild -find-executable
  clang)) && for compiler in clang clang++; do path=$(xcodebuild -find-executable
  $compiler); mv $path{,.orig} && sudo ln -sf $(dirname $path)/clang.orig /usr/bin/$compiler
  && ln -s ccache $path; done; fi
- rake ci_setup_cache
script:
- rake ci
- if [ $PACKAGE_UPLOAD ]; then rake ci_package_upload || ! [ $RELEASE_TAG ]; fi
after_script:
- rake ci_teardown_cache
- if [ ${TRAVIS_JOB_NUMBER##*.} == 10 ]; then rake ci_delete_mirror; fi
notifications:
  email:
    on_success: never
    on_failure: change
    recipients:
    - weitjong@gmail.com
